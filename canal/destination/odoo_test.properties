#################################################
## mysql serverId , v1.0.26+ will autoGen
# canal.instance.mysql.slaveId=0

# enable gtid use true/false
canal.instance.gtidon=false

# position info
canal.instance.master.address=172.16.254.41:3306
canal.instance.filter.regex=odoo_test\\.product_template
canal.instance.dbUsername=root
canal.instance.dbPassword=root
canal.instance.connectionCharset = UTF-8
canal.instance.master.journal.name=
canal.instance.master.position=
canal.instance.master.timestamp=
canal.instance.master.gtid=


#例子1：test\\.test 指定匹配的单表，发送到以test_test为名字的topic上
#例子2：.*\\..* 匹配所有表，则每个表都会发送到各自表名的topic上
#例子3：test 指定匹配对应的库，一个库的所有表都会发送到库名的topic上
#例子4：test\\.* 指定匹配的表达式，针对匹配的表会发送到各自表名的topic上
#例子5：test,test1\\.test1，指定多个表达式，会将test库的表都发送到test的topic上，test1\\.test1的表发送到对应的test1_test1 topic上，其余的表发送到默认的canal.mq.topic值
canal.mq.dynamicTopic=odoo_test\\.product_template

# mq config
canal.mq.topic=example
canal.mq.partition=0

#例子1：test\\.test:pk1^pk2 指定匹配的单表，对应的hash字段为pk1 + pk2
#例子2：.*\\..*:id 正则匹配，指定所有正则匹配的表对应的hash字段为id
#例子3：.*\\..* ，不指定pk信息的正则匹配，将所有正则匹配的表,对应的hash字段为表名
#canal.mq.partitionHash=.*\\..*
#canal.mq.partitionsNum=1
canal.mq.partitionHash=.*\\..*:id
canal.mq.partitionsNum=8


# rds oss binlog
canal.instance.rds.accesskey=
canal.instance.rds.secretkey=
canal.instance.rds.instanceId=

# table meta tsdb info
canal.instance.tsdb.enable=true
#canal.instance.tsdb.url=jdbc:mysql://127.0.0.1:3306/canal_tsdb
#canal.instance.tsdb.dbUsername=canal
#canal.instance.tsdb.dbPassword=canal

#canal.instance.standby.address =
#canal.instance.standby.journal.name =
#canal.instance.standby.position =
#canal.instance.standby.timestamp =
#canal.instance.standby.gtid=

# username/password
canal.instance.connectionCharset = UTF-8
# enable druid Decrypt database password
canal.instance.enableDruid=false
#canal.instance.pwdPublicKey=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALK4BUxdDltRRE5/zXpVEVPUgunvscYFtEip3pmLlhrWpacX7y7GCMo2/JM6LeHmiiNdH1FWgGCpUfircSwlWKUCAwEAAQ==

# table regex
#canal.instance.filter.regex=.*\\..*
# table black regex
canal.instance.filter.black.regex=

#################################################
